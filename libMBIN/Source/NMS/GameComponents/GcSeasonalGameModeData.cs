using libMBIN.NMS.Toolkit;
using libMBIN.NMS.GameComponents;
using System.Collections.Generic;

namespace libMBIN.NMS.GameComponents
{
    [NMS(GUID = 0xA9022338D8F65B6B, NameHash = 0xFD6B0BE30E218605)]
    public class GcSeasonalGameModeData : NMSTemplate
    {
        /* 0x0000 */ public int SeasonId;
        /* 0x0008 */ public ulong StartTimeUTC;
        /* 0x0010 */ public ulong EndTimeUTC;
        /* 0x0018 */ public ulong Hash;
        /* 0x0020 */ public NMSString0x20 Title;
        /* 0x0040 */ public NMSString0x20 Subtitle;
        /* 0x0060 */ public NMSString0x20 Description;
        /* 0x0080 */ public NMSString0x20 Summary;
        /* 0x00A0 */ public NMSString0x20A FinalStageTitle;
        /* 0x00C0 */ public NMSString0x20A MilestoneWithStageLocId;
        /* 0x00E0 */ public GcAudioWwiseEvents SeasonStartMusicOverride;
        /* 0x00E4 */ public bool BlockFirstSpaceMusic;
        /* 0x00E8 */ public GcGameMode GameMode;
        /* 0x00EC */ public GcDifficultyPresetType DifficultySettingPreset;
        /* 0x00F0 */ public GcDifficultySettingsData DifficultyMinimums;
        /* 0x0148 */ public NMSString0x10 CreateContextSaveDataMask;
        /* 0x0158 */ public NMSString0x10 SwitchContextSaveDataMask;
        /* 0x0168 */ public NMSString0x20 SeasonalUAOverride;
        /* 0x0188 */ public ulong UAOverrideValue;
        /* 0x0190 */ public NMSString0x10 FinalReward;
        /* 0x01A0 */ public NMSString0x10 FinalRewardSwitchAlt;
        /* 0x01B0 */ public NMSString0x20A FinalCantRewardMessage;
        /* 0x01D0 */ public NMSString0x200 FinalRewardDescription;
        /* 0x03D0 */ public TkTextureResource MainIcon;
        /* 0x0454 */ public int SeasonNumber;
        /* 0x0458 */ public int RemixNumber;
        /* 0x045C */ public int DisplayNumber;
        /* 0x0460 */ public NMSString0x20A SeasonName;
        /* 0x0480 */ public NMSString0x20A SeasonNameUpper;
        /* 0x04A0 */ public NMSString0x20A MainMissionTitle;
        /* 0x04C0 */ public NMSString0x20A MainMissionMessage;
        /* 0x04E0 */ public bool DoCommunityMissionTextSubstitutions;
        /* 0x04E8 */ public NMSString0x20A CommunityProgressTitle;
        /* 0x0508 */ public NMSString0x20A CommunityTierLabel;
        /* 0x0528 */ public NMSString0x20A CommunityTierProgressLabel;
        /* 0x0548 */ public NMSString0x20A CommunityTierCompleteLabel;
        /* 0x0568 */ public bool DefaultToPvPOff;
        /* 0x0569 */ public bool MustCraftInBases;
        /* 0x0570 */ public List<NMSString0x10> AdditionalTradeProducts;
        /* 0x0580 */ public List<NMSString0x10> NeverTradeProducts;
        /* 0x0590 */ public GcMissionSequenceDetailMessage InitialJoaoBox;
        /* 0x06A0 */ public GcMissionSequenceDetailMessage InitialJoaoBoxNoMainSave;
        /* 0x07B0 */ public int StartingSuitSlots;
        /* 0x07B4 */ public int StartingSuitTechSlots;
        /* 0x07B8 */ public int StartingSuitCargoSlots;
        /* 0x07C0 */ public GcSeed WeaponSeed;
        /* 0x07D0 */ public GcSeed ShipSeed;
        /* 0x07E0 */ public GcSpaceshipClasses ShipType;
        /* 0x07E4 */ public bool StartWithFreighter;
        /* 0x07E5 */ public NMSString0x80 FreighterBaseOverrideFilename;
        /* 0x0868 */ public GcAlienRace FreighterRace;
        /* 0x086C */ public bool StartAboardFreighter;
        /* 0x086D */ public bool ForceStartSystemTernary;
        /* 0x086E */ public bool ForceStartSystemAbandoned;
        /* 0x0870 */ public NMSString0x10 IntroSequencePOI;
        /* 0x0880 */ public List<GcBuildingClassification> ValidSpawnBuildings;
        /* 0x0890 */ public GcInventoryLayout WeaponInventoryLayout;
        /* 0x08B0 */ public GcInventoryLayout ShipInventoryLayout;
        /* 0x08D0 */ public GcInventoryLayout ShipTechInventoryLayout;
        /* 0x08F0 */ public bool UseDefaultAppearance;
        /* 0x08F8 */ public GcInventoryContainer Inventory;
        /* 0x0A50 */ public GcInventoryContainer Inventory_TechOnly;
        /* 0x0BA8 */ public GcInventoryContainer Inventory_Cargo;
        /* 0x0D00 */ public GcInventoryContainer ShipInventory;
        /* 0x0E58 */ public GcInventoryContainer WeaponInventory;
        /* 0x0FB0 */ public GcSeasonTransferInventoryConfig SeasonTransferInventoryConfig;
        /* 0x0FE8 */ public bool UseRandomPet;
        /* 0x0FF0 */ public List<GcSeasonPetConstraints> RandomPetConstraints;
        [NMS(Size = 0x12)]
        /* 0x1000 */ public GcPetData[] SpecificPets;
        /* 0x3640 */ public int StartingPetSlots;
        /* 0x3648 */ public List<GcSandwormTimerAndFrequencyOverride> SandwormOverrides;
        /* 0x3658 */ public bool SandwormGlobalOverride;
        /* 0x365C */ public float SandwormGlobalOverrideTimer;
        /* 0x3660 */ public float SandwormGlobalOverrideSpawnChance;
        /* 0x3664 */ public bool StartNextToShip;
        /* 0x3665 */ public bool ShipIsAtDifferentBuildingToPlayer;
        /* 0x3668 */ public float DistanceFromShipAtStartOfGame;
        /* 0x366C */ public float BuildingRadiusShipOffsetMultiplier;
        /* 0x3670 */ public bool ShipStartsDamaged;
        /* 0x3671 */ public bool BlockStormsAtStart;
        /* 0x3672 */ public bool BlockAggressiveSentinelsInStartSystem;
        /* 0x3673 */ public bool AllowMissionDetailMessages;
        /* 0x3674 */ public bool UseStartPlanetObjectListOverrides;
        /* 0x3678 */ public NMSString0x10 StartPlanetRareSubstanceOverride;
        /* 0x3688 */ public bool TrashInventoryOnGalaxyTravel;
        /* 0x368C */ public int FreighterBattleEarlyWarpsOverride;
        /* 0x3690 */ public bool ForceDeepSpaceAmbientFrigatesOnInfested;
        /* 0x3694 */ public int TechCostMultiplier;
        /* 0x3698 */ public List<NMSString0x10> NeverLearnableTech;
        /* 0x36A8 */ public List<NMSString0x10> ForgottenProducts;
        /* 0x36B8 */ public bool IncreaseXClassTechOddsWithCommTier;
        /* 0x36BC */ public float AbandonedFreighterHazardProtectionMul;
        /* 0x36C0 */ public float FarmPlantsTimerMul;
        /* 0x36C4 */ public float HazardProtectionDrainMultiplier;
        /* 0x36C8 */ public float EnergyDrainMultiplier;
        /* 0x36CC */ public int QuestSubstanceReducer;
        /* 0x36D0 */ public List<GcSeasonalStage> Stages;
        /* 0x36E0 */ public GcScanEventTable ScanEventTable;
        /* 0x36F0 */ public bool ResetSaveOnDeath;
        /* 0x36F8 */ public List<GcPersistedStatData> StatsToPersistOnReset;
        /* 0x3708 */ public bool CompatibleWithState;
        /* 0x3709 */ public bool HasBeenConverted;
        /* 0x3710 */ public List<GcTechnology> TechnologyTable;
        /* 0x3720 */ public List<GcProductData> ProductTable;
        /* 0x3730 */ public List<GcRealitySubstanceData> SubstanceTable;
        /* 0x3740 */ public GcTradeData SeasonalUAStationTradeData;
        /* 0x3810 */ public bool UseSeasonalUAStationTradeData;
    }
}
