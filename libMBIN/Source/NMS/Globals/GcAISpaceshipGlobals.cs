using libMBIN.NMS.Toolkit;
using libMBIN.NMS.GameComponents;
using System.Collections.Generic;

namespace libMBIN.NMS.Globals
{
    [NMS(GUID = 0xE4E8628BED443545, NameHash = 0xD338272248F67908)]
    public class GcAISpaceshipGlobals : NMSTemplate
    {
        /* 0x000 */ public GcPlayerSquadronConfig PlayerSquadronConfig;
        /* 0x240 */ public Colour FreighterEngineGlowDefaultColour;
        /* 0x250 */ public float PoliceFreighterLaserRange;
        /* 0x254 */ public float PoliceFreighterLaserShootTime;
        /* 0x258 */ public float PoliceFreighterLaserRandomExtraPauseMax;
        /* 0x25C */ public float PoliceFreighterLaserActiveTime;
        /* 0x260 */ public float PoliceFreighterProjectileRange;
        /* 0x264 */ public int PoliceFreighterProjectileBurstCount;
        /* 0x268 */ public float PoliceFreighterProjectileBurstTime;
        /* 0x26C */ public float PoliceFreighterProjectilePauseTime;
        /* 0x270 */ public float PoliceFreighterProjectileRandomExtraPauseMax;
        /* 0x274 */ public int PoliceFreighterProjectileModulo;
        /* 0x278 */ public bool DisplayShipAttackTypes;
        /* 0x27C */ public float MaxDifficultySpaceCombatTurnExtra;
        /* 0x280 */ public float MaxDifficultySpaceCombatSpeedExtra;
        /* 0x284 */ public float MinimumCircleTimeBeforeLanding;
        /* 0x288 */ public float MinimumTimeBetweenOutpostLandings;
        /* 0x28C */ public float VisibleDistance;
        /* 0x290 */ public bool TradersAttackPirates;
        /* 0x291 */ public bool FreightersAlwaysAttackPlayer;
        /* 0x292 */ public bool GroundEffectEnabled;
        /* 0x293 */ public bool AtmosphereEffectEnabled;
        /* 0x294 */ public bool FillUpOutposts;
        /* 0x298 */ public float SalvageTime;
        /* 0x29C */ public float SalvageRemovalTime;
        /* 0x2A0 */ public float SalvageValueMultiplier;
        /* 0x2A4 */ public float DockingWaitDistance;
        /* 0x2A8 */ public int MaxNumActiveTraders;
        /* 0x2AC */ public float MaxNumActiveTraderRadius;
        /* 0x2B0 */ public int MaxNumActivePolice;
        /* 0x2B4 */ public float MaxNumActivePoliceRadius;
        /* 0x2B8 */ public int MinAggroDamage;
        /* 0x2BC */ public float TrailLandingFadeTime;
        /* 0x2C0 */ public bool EnergyShieldsEnabled;
        /* 0x2C1 */ public NMSString0x80 EnergyShield;
        /* 0x348 */ public NMSString0x10 EnergyShieldDepletedEffect;
        /* 0x358 */ public NMSString0x10 EnergyShieldStartRechargeEffect;
        /* 0x368 */ public NMSString0x10 EnergyShieldStartRechargeFromDepletedEffect;
        /* 0x378 */ public bool EnergyShieldAlwaysVisible;
        /* 0x37C */ public float EnergyShieldFadeMinOpacityInCombat;
        /* 0x380 */ public float EnergyShieldFreighterFadeMinOpacityInCombat;
        /* 0x384 */ public float EnergyShieldFadeNonPlayerHitOpacity;
        /* 0x388 */ public float EnergyShieldFadeInRate;
        /* 0x38C */ public float EnergyShieldFadeOutRate;
        /* 0x390 */ public float MinLaserFireTime;
        /* 0x394 */ public float ShipAlertPirateRange;
        /* 0x398 */ public float PlanetaryPirateHostileShipPerceptionRange;
        /* 0x39C */ public float PlanetaryPirateRaidFocusBuildingsTime;
        /* 0x3A0 */ public float PlanetaryPirateRaidTradersEngageTime;
        /* 0x3A4 */ public int PlanetaryPirateRaidMaxTradersJoinCombat;
        /* 0x3A8 */ public float EscapeRollTimePlanet;
        /* 0x3AC */ public float EscapeRollTime;
        /* 0x3B0 */ public float EscapeRollPlanet;
        /* 0x3B4 */ public float EscapeRoll;
        /* 0x3B8 */ public int CrashedShipMinNonBrokenSlots;
        /* 0x3BC */ public float SentinelGunBrokenSlotChance;
        /* 0x3C0 */ public float CrashedShipBrokenSlotChance;
        /* 0x3C4 */ public float CrashedShipBrokenTechChance;
        /* 0x3C8 */ public float CrashedShipRepairSlotCostIncreaseFactor;
        /* 0x3CC */ public float CrashedShipGeneralCostDiscount;
        /* 0x3D0 */ public float CrashedShipTechSlotsCostDiscount;
        /* 0x3D4 */ public float PirateSpawnSpacing;
        /* 0x3D8 */ public float DistanceFlareMinDistance;
        /* 0x3DC */ public float DistanceFlareRange;
        /* 0x3E0 */ public float DistanceFlareMinScale;
        /* 0x3E4 */ public float DistanceFlareMaxScale;
        /* 0x3E8 */ public float DistanceFlareMinSpeed;
        /* 0x3EC */ public float DistanceFlareSpeedRange;
        /* 0x3F0 */ public float DistanceFlareFlickerFreq;
        /* 0x3F4 */ public float DistanceFlareFlickerAmp;
        /* 0x3F8 */ public bool AttackRepositionBoost;
        /* 0x3F9 */ public bool AttackShipsFollowLeader;
        /* 0x3FC */ public float AttackTooCloseMinRelSpeed;
        [NMS(Size = 0x7, EnumType = typeof(GcAISpaceshipTypes.ShipTypeEnum))]
        /* 0x400 */ public NMSString0x10[] ProjectileWeaponMuzzleFlashes;
        /* 0x470 */ public float RewardLootOffset;
        /* 0x474 */ public float RewardLootOffsetSpeed;
        /* 0x478 */ public float RewardLootAngularSpeed;
        /* 0x47C */ public float FlybyPlanetLandingProbability;
        /* 0x480 */ public GcCombatEffectsComponentData CombatEffectsComponentData;
        /* 0x4B0 */ public GcSpaceshipTravelData FallbackTravelData;
        /* 0x4F8 */ public GcSpaceshipTravelData SlowCombatEffectAttackTravel;
        /* 0x540 */ public GcSpaceshipTravelData AsteroidMiningPositioningTravelData;
        /* 0x588 */ public GcSpaceshipTravelData AsteroidMiningTravelData;
        /* 0x5D0 */ public float AsteroidMiningSearchRadius;
        /* 0x5D4 */ public float AsteroidMiningMaxAsteroidRadius;
        /* 0x5D8 */ public float AsteroidMiningMaxViewAngleYaw;
        /* 0x5DC */ public float AsteroidMiningMinViewAnglePitch;
        /* 0x5E0 */ public float AsteroidMiningMaxViewAnglePitch;
        /* 0x5E4 */ public float AsteroidMiningMinDistFromPlayer;
        /* 0x5E8 */ public float AsteroidMiningMinMiningAngle;
        /* 0x5EC */ public float AsteroidMiningMaxMiningTime;
        /* 0x5F0 */ public float AttackShipAvoidStartTime;
        /* 0x5F4 */ public float AttackMinimumTimeBeforeTargetSwitch;
        /* 0x5F8 */ public float PirateExtraDamage;
        [NMS(Size = 0x37, EnumType = typeof(GcBuildingClassification.BuildingClassEnum))]
        /* 0x5FC */ public bool[] PirateAttackableBuildingClasses;
        /* 0x634 */ public float PirateMaintainBuildingTargetTime;
        /* 0x638 */ public float ShieldCollisionRadiusMultiplier;
        /* 0x63C */ public float CollisionRayLengthMin;
        /* 0x640 */ public float CollisionRayLengthMax;
        /* 0x648 */ public GcSpaceshipTravelData OutpostLanding;
        /* 0x690 */ public GcSpaceshipTravelData PlanetLanding;
        /* 0x6D8 */ public float OutpostLandingNoiseFreq;
        /* 0x6DC */ public float OutpostLandingNoiseAmp;
        /* 0x6E0 */ public float OutpostLandingNoiseOffset;
        /* 0x6E4 */ public float OutpostDockUpAlignMaxAngleFirstPerson;
        /* 0x6E8 */ public float OutpostDockUpAlignMaxAngle;
        /* 0x6EC */ public float OutpostDockMaxApproachSpeed;
        /* 0x6F0 */ public float OutpostDockOverspeedBrake;
        /* 0x6F4 */ public float OutpostDockGetToApproachForce;
        /* 0x6F8 */ public float OutpostDockGetToApproachBrakeForce;
        /* 0x6FC */ public float OutpostDockGetToApproachExtraBrakeForce;
        /* 0x700 */ public float OutpostDockApproachSpeedForce;
        /* 0x704 */ public float OutpostDockApproachDistance;
        /* 0x708 */ public float OutpostDockApproachSpeedUpDamper;
        /* 0x70C */ public float OutpostDockAIGetToApproachForce;
        /* 0x710 */ public float OutpostDockAIGetToApproachBrakeForce;
        /* 0x714 */ public float OutpostDockAIApproachSpeedForce;
        /* 0x718 */ public float OutpostDockMaxForce;
        /* 0x71C */ public float OutpostDockMinTipLength;
        /* 0x720 */ public float OutpostDockMaxTipLength;
        /* 0x724 */ public float OutpostDockApproachUpAmount;
        /* 0x728 */ public float OutpostDockApproachRenderRadius;
        /* 0x72C */ public float OutpostDockApproachRenderFlickerOffset;
        /* 0x730 */ public float LandingTipAngle;
        /* 0x734 */ public float LandingLongTipAngle;
        /* 0x738 */ public List<Vector2f> SpaceBattleSpawnAngle;
        /* 0x748 */ public List<Vector2f> SpaceBattleSpawnPitch;
        /* 0x758 */ public List<Vector2f> SpaceBattleSpawnOffset;
        /* 0x768 */ public List<Vector2f> SpaceBattleSunHeightAngle;
        /* 0x778 */ public List<Vector2f> SpaceBattleSunAroundAngle;
        /* 0x788 */ public List<Vector2f> SpaceBattleSpawnRange;
        /* 0x798 */ public List<Vector2f> SpaceBattlePirateRange;
        /* 0x7A8 */ public List<Vector2f> SpaceBattleGuardsRange;
        /* 0x7B8 */ public float SpaceBattleGuardOffset;
        /* 0x7BC */ public float SpaceBattleGuardUpOffset;
        /* 0x7C0 */ public float SpaceBattleInitialPirateUpOffset;
        /* 0x7C4 */ public float SpaceBattleInitialPirateOffset;
        /* 0x7C8 */ public float SpaceBattleObstructionRadius;
        /* 0x7CC */ public float SpaceBattleFlybyTime;
        /* 0x7D0 */ public Vector2f ConeSpawnOffsetFactor;
        /* 0x7D8 */ public float ConeSpawnFlattenUp;
        /* 0x7DC */ public float ConeSpawnFlattenDown;
        /* 0x7E0 */ public bool FreighterAlertLights;
        /* 0x7E4 */ public float FreighterAlertLightCapitalSize;
        /* 0x7E8 */ public NMSString0x80 LegacyHangarFilename;
        /* 0x868 */ public NMSString0x80 HangarFilename;
        /* 0x8E8 */ public float PoliceFreighterWarpOutRange;
        /* 0x8EC */ public float MissileRange;
        /* 0x8F0 */ public Colour FreighterDoorColourActive;
        /* 0x900 */ public Colour FreighterDoorColourInactive;
        /* 0x910 */ public Colour AlertLightColour;
        /* 0x920 */ public TkHitCurveData FreighterLightHitCurve;
        /* 0x92C */ public float FreighterAlertLightTime;
        /* 0x930 */ public float FreighterAlertLightIntensity;
        /* 0x934 */ public int MaxNumTurretMissiles;
        /* 0x938 */ public float TurretOriginOffset;
        /* 0x93C */ public float TurretAlertLightIntensity;
        /* 0x940 */ public Vector3f TurretAlertLightOffset;
        /* 0x950 */ public bool DisableTradeRoutes;
        /* 0x954 */ public float AttackFreighterGetThereBoost;
        /* 0x958 */ public float AttackFreighterApproach;
        /* 0x95C */ public float AttackFreighterWingmanAlignMinDist;
        /* 0x960 */ public float AttackFreighterWingmanAlignRange;
        /* 0x964 */ public float AttackFreighterApproachDistance;
        /* 0x968 */ public float AttackFreighterAttackRunStartDistance;
        /* 0x96C */ public float AttackFreighterBugOutDistance;
        /* 0x970 */ public float AttackFreighterButOutTurnUp;
        /* 0x974 */ public float AttackFreighterButOutSpeedUp;
        /* 0x978 */ public float AttackFreighterWingmanRadius;
        /* 0x97C */ public float AttackFreighterWingmanOffset;
        /* 0x980 */ public float AttackFreighterWingmanLockAlign;
        /* 0x984 */ public float AttackFreighterWingmanLock;
        /* 0x988 */ public float AttackFreighterWingmanMaxForce;
        /* 0x98C */ public float AttackFreighterAngle;
        /* 0x990 */ public float AttackFreighterRunOffset;
        /* 0x994 */ public float AttackFreighterWingmanStart;
        /* 0x998 */ public float PirateFreighterWarpOffset;
        /* 0x99C */ public Vector2f PirateFreighterAttackRange;
        /* 0x9A4 */ public float MissileLaunchSpeed;
        /* 0x9A8 */ public float AttackAfterSpawnTime;
        /* 0x9AC */ public Vector2f FreighterMiniSpeeds;
        /* 0x9B4 */ public float AttackBuildingGetThereBoost;
        /* 0x9B8 */ public float AttackBuildingApproachDistance;
        /* 0x9BC */ public float AttackBuildingRunStartDistance;
        /* 0x9C0 */ public float AttackBuildingAttackRunDistTolerance;
        /* 0x9C4 */ public float AttackBuildingFiringAngleTolerance;
        /* 0x9C8 */ public float AttackBuildingBugOutDistance;
        /* 0x9CC */ public float AttackBuildingBugOutTurnUp;
        /* 0x9D0 */ public float AttackBuildingBugOutSpeedUp;
        /* 0x9D4 */ public float AttackBuildingRunAngleMin;
        /* 0x9D8 */ public float AttackBuildingRunAngleMax;
        /* 0x9DC */ public float AttackBuildingNextRunAngleDeltaMin;
        /* 0x9E0 */ public float AttackBuildingNextRunAngleDeltaMax;
        /* 0x9E4 */ public float AttackBuildingTargetGroundOffsetScaleStart;
        /* 0x9E8 */ public float AttackBuildingTargetGroundOffsetScaleEnd;
        /* 0x9EC */ public float AsteroidShootAngle;
        /* 0x9F0 */ public float TraderWantedTime;
        /* 0x9F4 */ public float TraderRequestTime;
        /* 0x9F8 */ public float TraderPostCombatRequestTime;
        /* 0x9FC */ public float TradingPostTraderRequestTime;
        /* 0xA00 */ public float TradingPostTraderRange;
        /* 0xA04 */ public float TradingPostTraderRangeSpace;
        /* 0xA08 */ public float SpaceStationTraderRequestTime;
        /* 0xA0C */ public float AbandonedSystemShipSpawnProbablity;
        /* 0xA10 */ public int FlybyCloseOdds;
        /* 0xA14 */ public float BountySpawnAngle;
        /* 0xA18 */ public float PoliceLaunchSpeed;
        /* 0xA1C */ public float PoliceLaunchTime;
        /* 0xA20 */ public float PolicePauseTime;
        /* 0xA24 */ public float PolicePauseTimeSpaceBattle;
        /* 0xA28 */ public float PoliceEscapeTime;
        /* 0xA2C */ public float PoliceEscapeMinTime;
        /* 0xA30 */ public float PoliceStationWaveTimer;
        /* 0xA34 */ public float PoliceStationEngageRange;
        /* 0xA38 */ public int PoliceStationNumToLaunch;
        /* 0xA3C */ public int TraderIgnoreHits;
        /* 0xA40 */ public float PirateFreighterSpawnAttackAngle;
        /* 0xA44 */ public float PirateFreighterSpawnAttackOffset;
        /* 0xA48 */ public float PirateFreighterSpawnAttackSpread;
        /* 0xA4C */ public float PirateSpawnAngle;
        /* 0xA50 */ public float PirateBattleMaxTime;
        /* 0xA54 */ public float PirateArriveTime;
        /* 0xA58 */ public float PirateStartSpeed;
        /* 0xA5C */ public float PirateBattleStartSpeed;
        /* 0xA60 */ public float PirateInterestTime;
        /* 0xA64 */ public float PirateBattleInterestTime;
        /* 0xA68 */ public float PirateFreighterBattleDistance;
        /* 0xA6C */ public float TraderArriveSpeed;
        /* 0xA70 */ public float TraderArriveTime;
        /* 0xA74 */ public float HeightTestSampleDistance;
        /* 0xA78 */ public float HeightTestSampleTime;
        /* 0xA7C */ public float OutpostToLandingDistance;
        /* 0xA80 */ public bool FreightersSamePalette;
        /* 0xA84 */ public float PlanetUpAlignTime;
        /* 0xA88 */ public float CollisionReactionTime;
        /* 0xA8C */ public float FreighterScale;
        /* 0xA90 */ public bool PoliceSpawnEffect;
        /* 0xA94 */ public int MaxNumFreighters;
        /* 0xA98 */ public float ShipSpawnStationRadius;
        /* 0xA9C */ public float ShipSpawnAnomalyRadius;
        /* 0xAA0 */ public float BattleSpawnStationMinDistance;
        /* 0xAA4 */ public float PoliceSpawnViewAngle;
        /* 0xAA8 */ public float PoliceEntranceStartTime;
        /* 0xAAC */ public float PoliceEntranceProbe;
        /* 0xAB0 */ public float PoliceEntranceEscalateProbingTime;
        /* 0xAB4 */ public float PoliceEntranceEscalateIncomingTime;
        /* 0xAB8 */ public float PoliceEntranceCargoScanStartTime;
        /* 0xABC */ public float PoliceEntranceCargoProbingTime;
        /* 0xAC0 */ public float PoliceEntranceCargoOpenCommsWaitTime;
        /* 0xAC4 */ public float PoliceEntranceCargoAttackWaitTime;
        /* 0xAC8 */ public float PoliceEntranceCargoScanHailNotificationWaitTime;
        /* 0xACC */ public float PoliceArriveTime;
        /* 0xAD0 */ public float PoliceAbortRange;
        /* 0xAD4 */ public float PoliceWarnBeaconPulseTime;
        /* 0xAD8 */ public float ArrivalStaggerOffset;
        /* 0xADC */ public float TrailScaleMinDistance;
        /* 0xAE0 */ public float TrailScale;
        /* 0xAE4 */ public float TrailScaleRange;
        /* 0xAE8 */ public float TrailScaleMaxScale;
        /* 0xAEC */ public float TrailScaleFreighterMaxScale;
        /* 0xAF0 */ public TkCurveType TrailScaleCurve;
        /* 0xAF4 */ public float TradeRouteSeekOutpostRange;
        /* 0xAF8 */ public float TradeRouteFollowOffset;
        /* 0xAFC */ public NMSString0x100 TradeRouteIcon;
        /* 0xBFC */ public float TradeRouteSpawnDistance;
        /* 0xC00 */ public float TradeRouteTrailDrawDistance;
        /* 0xC04 */ public float TradeRouteTrailFadeTime;
        /* 0xC08 */ public float TradeRouteTrailTimeOffset;
        /* 0xC0C */ public float TradeRouteStationRadius;
        /* 0xC10 */ public float TradeRouteSpeed;
        /* 0xC14 */ public float TradeRouteSlowRange;
        /* 0xC18 */ public float TradeRouteSlowSpeed;
        /* 0xC1C */ public int TradeRouteDivisions;
        /* 0xC20 */ public float TradeRouteFlickerFreq;
        /* 0xC24 */ public float TradeRouteFlickerAmp;
        /* 0xC28 */ public int TradeRouteMaxNum;
        /* 0xC30 */ public List<Colour> TradeRouteColours;
        /* 0xC40 */ public bool EnableLoot;
        /* 0xC44 */ public float LaserHitOffset;
        /* 0xC48 */ public float DirectionBrakeThresholdSq;
        /* 0xC4C */ public int PoliceNumPerTarget;
        /* 0xC50 */ public Vector2f PoliceSideOffset;
        /* 0xC58 */ public Vector2f PoliceUpOffset;
        /* 0xC60 */ public float WitnessHearingRange;
        /* 0xC64 */ public float WitnessSightRange;
        /* 0xC68 */ public float WitnessSightAngle;
        /* 0xC6C */ public float FreighterImpactScale;
        /* 0xC70 */ public float FreighterAlertThreshold;
        /* 0xC74 */ public float FreighterAttackDisengageDistance;
        /* 0xC78 */ public float FreighterAttackAlertThreshold;
        /* 0xC7C */ public float FreighterAlertTimeOutRate;
        /* 0xC80 */ public float FreighterAlertTimeOutMinTime;
        /* 0xC84 */ public float FreighterShipLaunchSpeed;
        /* 0xC88 */ public float FreighterLaunchTime;
        /* 0xC8C */ public float FreighterLaunchStartTime;
        /* 0xC90 */ public bool FreighterIgnorePlayer;
        /* 0xC94 */ public float FreighterRegisterHitCooldown;
        /* 0xC98 */ public int FreighterMaxNumLaunchedShips;
        /* 0xC9C */ public float FreighterSpawnMargin;
        /* 0xCA0 */ public float FreighterSpawnRadius;
        /* 0xCA4 */ public float FreighterSpawnRate;
        /* 0xCA8 */ public float FreighterSpawnViewAngle;
        /* 0xCAC */ public float FreighterSpawnVisibleFreightersDistance;
        /* 0xCB0 */ public float FrigateSpawnMargin;
        /* 0xCB4 */ public float EngineFlareAccelMin;
        /* 0xCB8 */ public float EngineFlareAccelMax;
        /* 0xCBC */ public float EngineFlareSizeMin;
        /* 0xCC0 */ public float EngineFlareSizeMax;
        /* 0xCC4 */ public float EngineFlareVibrateAmp;
        /* 0xCC8 */ public float EngineFlareVibrateFreq;
        /* 0xCCC */ public float EngineFlareOffset;
        /* 0xCD0 */ public float EngineFireSize;
        /* 0xCD4 */ public float PitchFlip;
        /* 0xCD8 */ public float AttackAimTime;
        /* 0xCDC */ public float AttackRunSlowdown;
        /* 0xCE0 */ public float PiratePlayerAttackRange;
        /* 0xCE4 */ public float MoveHeightAdjust;
        /* 0xCE8 */ public float MoveAvoidRange;
        /* 0xCEC */ public int MoveHeightNumSamples;
        /* 0xCF0 */ public float MoveHeightSampleSectionSize;
        /* 0xCF4 */ public float MoveHeightCheckTime;
        /* 0xCF8 */ public float TurretRandomOffset;
        /* 0xCFC */ public float TurretRandomAIShipOffset;
        /* 0xD00 */ public float PoliceLaunchDistance;
        /* 0xD04 */ public float Scaler;
        /* 0xD08 */ public float ScaleTime;
        /* 0xD0C */ public float ScalerMinDist;
        /* 0xD10 */ public float ScalerMaxDist;
        /* 0xD14 */ public float ScaleHeightMin;
        /* 0xD18 */ public float ScaleHeightMax;
        /* 0xD1C */ public bool ScaleDisabledWhenOnFreighter;
        /* 0xD20 */ public float WarpInPlayerLocatorTime;
        /* 0xD24 */ public float WarpInPlayerLocatorMinOffset;
        /* 0xD28 */ public float WarpInTime;
        /* 0xD2C */ public float WarpFadeInTime;
        /* 0xD30 */ public float WarpInTimeFreighter;
        /* 0xD34 */ public TkCurveType WarpInCurve;
        /* 0xD38 */ public float WarpInVariance;
        /* 0xD3C */ public float WarpInDistance;
        /* 0xD40 */ public float WarpInPostSpeed;
        /* 0xD44 */ public float WarpInPostSpeedFreighter;
        /* 0xD48 */ public float WarpInAudioFXDelay;
        /* 0xD4C */ public float WarpOutDistance;
        [NMS(Size = 0x7, EnumType = typeof(GcAISpaceshipTypes.ShipTypeEnum))]
        /* 0xD50 */ public NMSString0x10[] WarpStartEffectIDs;
        [NMS(Size = 0x7, EnumType = typeof(GcAISpaceshipTypes.ShipTypeEnum))]
        /* 0xDC0 */ public NMSString0x10[] WarpArriveEffectIDs;
        /* 0xE30 */ public float ShipEscapeTimeBeforeWarpOut;
        /* 0xE34 */ public float ShipEscortLockOnDistance;
        /* 0xE38 */ public float ShipEscortVelocityBand;
        /* 0xE3C */ public float ShipEscortVelocityBandForce;
        /* 0xE40 */ public float ShipEscortFwdForceTime;
        /* 0xE44 */ public float ShipEscortBackForceTime;
        /* 0xE48 */ public float ShipEscortPerpForceTime;
        /* 0xE4C */ public float ShipEscortRadialOffsetScaleMin;
        /* 0xE50 */ public float ShipEscortRadialOffsetScaleMax;
        /* 0xE54 */ public float ShipEscortForwardOffsetScaleMin;
        /* 0xE58 */ public float ShipEscortForwardOffsetScaleMax;
        /* 0xE5C */ public float PirateFlybyLength;
        /* 0xE60 */ public float FlybyLength;
        /* 0xE64 */ public float FlybyHeight;
        /* 0xE68 */ public float FlybyOffset;
        /* 0xE6C */ public GcProjectileLineData ShipBullet;
        /* 0xE94 */ public float WingmanLockDistance;
        /* 0xE98 */ public float WingmanLockBetweenTime;
        /* 0xE9C */ public float WingmanLockArriveTime;
        /* 0xEA0 */ public float WingmanMinHeight;
        /* 0xEA4 */ public float WingmanHeightAdjust;
        /* 0xEA8 */ public float WingmanStartTime;
        /* 0xEAC */ public float WingmanOffsetStart;
        /* 0xEB0 */ public float WingmanOffset;
        /* 0xEB4 */ public float WingmanSideOffset;
        /* 0xEB8 */ public float WingmanRotate;
        /* 0xEBC */ public float WingmanAtTime;
        /* 0xEC0 */ public float WingmanAtTimeBack;
        /* 0xEC4 */ public float WingmanPerpTime;
        /* 0xEC8 */ public float WingmanVelocityBand;
        /* 0xECC */ public float WingmanVelocityBandForce;
        /* 0xED0 */ public float TraderAtTime;
        /* 0xED4 */ public float TraderAtTimeBack;
        /* 0xED8 */ public float TraderPerpTime;
        /* 0xEDC */ public float TraderVelocityBand;
        /* 0xEE0 */ public float TraderVelocityBandForce;
        /* 0xEE4 */ public float WingmanAlign;
        /* 0xEE8 */ public float WarpSpeed;
        /* 0xEEC */ public float WarpForce;
        /* 0xEF0 */ public float TrailSpeedFadeMinSpeed;
        /* 0xEF4 */ public float TrailSpeedFadeFalloff;
        /* 0xEF8 */ public float DockingLandingTime;
        /* 0xEFC */ public float DockingLandingTimeDirectional;
        /* 0xF00 */ public float DockingSpringTime;
        /* 0xF04 */ public float DockingLandingBounceTime;
        /* 0xF08 */ public float DockingLandingBounceHeight;
        /* 0xF0C */ public float DockingRotateStartTime;
        /* 0xF10 */ public float DockingRotateSpeed;
        /* 0xF14 */ public float DockWaitMinTime;
        /* 0xF18 */ public float DockWaitMaxTime;
        /* 0xF1C */ public float TakeOffHoverPointReachedDistance;
        /* 0xF20 */ public float TakeOffExitHeightOffset;
        /* 0xF24 */ public float TakeOffExtraAIHeight;
        /* 0xF28 */ public float LandingManuevreTime;
        /* 0xF2C */ public float LandingManeuvreAlignTime;
        /* 0xF30 */ public float LandingHoverPointReachedDistance;
        /* 0xF34 */ public float LandingDirectionalHoverPointReachedDistance;
        /* 0xF38 */ public float AtmosphereTerminalSpeed;
        /* 0xF3C */ public float CircleApproachDistance;
        /* 0xF40 */ public float TravelMinBoostTime;
        /* 0xF44 */ public float GroundCircleHeight;
        /* 0xF48 */ public float GroundCircleHeightMax;
        /* 0xF4C */ public float OrbitHeight;
        /* 0xF50 */ public float AtmosphereEffectMin;
        /* 0xF54 */ public float AtmosphereEffectMax;
        /* 0xF58 */ public float MaxTorque;
        /* 0xF5C */ public float ShipAngularFactor;
        /* 0xF60 */ public float RollAmount;
        /* 0xF64 */ public float RollMinTurnAngle;
        /* 0xF68 */ public float FinalDeathExplosionScale;
        /* 0xF6C */ public float FinalDeathExplosionTime;
        /* 0xF70 */ public float FinalDeathFadeTime;
        /* 0xF74 */ public GcShipAIDeathData Death;
        /* 0xF90 */ public GcShipAIPlanetPatrolData WingmanPathData;
        /* 0xFC8 */ public List<GcAIShipDebugSpawnData> DebugShipSpawns;
    }
}
